definitions:
  github_com_teten-nugraha_golang-production-ready-rest-api_internal_models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_teten-nugraha_golang-production-ready-rest-api_internal_models.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  github_com_teten-nugraha_golang-production-ready-rest-api_internal_models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    required:
    - email
    - name
    type: object
  github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample REST API with Go.
  title: Golang REST API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and get JWT token
      parameters:
      - description: Login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns JWT token
          schema:
            allOf:
            - $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.SuccessResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
      summary: User login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Register input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - users
    get:
      description: Get a single user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_teten-nugraha_golang-production-ready-rest-api_internal_utils.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
